/autofs/cluster/octdata2/users/epc28/miniconda/envs/vesselsynth/lib/python3.10/site-packages/torchvision/io/image.py:13: UserWarning: Failed to load image Python extension: '/autofs/cluster/octdata2/users/epc28/miniconda/envs/vesselsynth/lib/python3.10/site-packages/torchvision/image.so: undefined symbol: _ZN3c106detail23torchInternalAssertFailEPKcS2_jS2_RKSs'If you don't plan on using image functionality from `torchvision.io`, you can ignore this warning. Otherwise, there might be something wrong with your environment. Did you have `libjpeg` or `libpng` installed before building `torchvision` from source?
  warn(
23:51:3 Starting
23:51:3 Loading data
23:52:4 Normalizing
23:52:28 Starting Predictions
Traceback (most recent call last):
  File "/autofs/cluster/octdata2/users/epc28/veritas/scripts/testing/test.py", line 258, in <module>
    Predict().realData(in_path)
  File "/autofs/cluster/octdata2/users/epc28/veritas/scripts/testing/test.py", line 140, in realData
    seg = self.patch_forward(net=trainee, img=self.tensor, device=self.device)
  File "/autofs/cluster/octdata2/users/epc28/veritas/scripts/testing/test.py", line 181, in patch_forward
    pred = net(block).detach()
  File "/autofs/cluster/octdata2/users/epc28/miniconda/envs/vesselsynth/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/autofs/cluster/octdata2/users/epc28/veritas/vesselseg/vesselseg/train.py", line 105, in forward
    return self.network(x)
  File "/autofs/cluster/octdata2/users/epc28/miniconda/envs/vesselsynth/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/autofs/cluster/octdata2/users/epc28/miniconda/envs/vesselsynth/lib/python3.10/site-packages/torch/nn/modules/container.py", line 217, in forward
    input = module(input)
  File "/autofs/cluster/octdata2/users/epc28/miniconda/envs/vesselsynth/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/autofs/cluster/octdata2/users/epc28/veritas/vesselseg/vesselseg/networks.py", line 170, in forward
    x = layer(x)
  File "/autofs/cluster/octdata2/users/epc28/miniconda/envs/vesselsynth/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/autofs/cluster/octdata2/users/epc28/veritas/vesselseg/vesselseg/modules.py", line 630, in forward
    x = self.conv(x)
  File "/autofs/cluster/octdata2/users/epc28/miniconda/envs/vesselsynth/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/autofs/cluster/octdata2/users/epc28/miniconda/envs/vesselsynth/lib/python3.10/site-packages/torch/nn/modules/container.py", line 217, in forward
    input = module(input)
  File "/autofs/cluster/octdata2/users/epc28/miniconda/envs/vesselsynth/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/autofs/cluster/octdata2/users/epc28/miniconda/envs/vesselsynth/lib/python3.10/site-packages/torch/nn/modules/container.py", line 217, in forward
    input = module(input)
  File "/autofs/cluster/octdata2/users/epc28/miniconda/envs/vesselsynth/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/autofs/cluster/octdata2/users/epc28/miniconda/envs/vesselsynth/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 613, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/autofs/cluster/octdata2/users/epc28/miniconda/envs/vesselsynth/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 608, in _conv_forward
    return F.conv3d(
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 216.00 GiB (GPU 0; 47.46 GiB total capacity; 16.09 GiB already allocated; 30.53 GiB free; 16.10 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
